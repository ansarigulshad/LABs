**How to Enable PAM and LDAP Authentication for Knox**

## Summary
This article explains how to enable both PAM and LDAP authentication for Knox. By default, Knox uses PAM authentication, but in some cases, it is necessary to enable both PAM and LDAP simultaneously without removing PAM.

## Instructions

### 1. Review the Current Authentication Setup
Knox is configured with PAM authentication by default. The goal is to add LDAP authentication without removing PAM, allowing Knox to authenticate using either method.

To remove the existing PAM authentication parameters, use the following:
```
authentication.param.remove=main.pamRealm
authentication.param.remove=main.pamRealm.service
```

### 2. Navigate to Configuration Settings
1. Open **Cloudera Manager (CM)**.
2. Go to **Knox > Configuration**.
3. Under **Knox Simplified Topology Management**, locate the **SSO Authentication Provider** section.

### 3. Add Required Configuration for Both PAM and LDAP
In the **SSO Authentication Provider** settings, add the following configuration values:
```
authentication.param.main.securityManager.realms=$pamRealm,$ldapRealm
```

### 4. Add Detailed Authentication Configuration
Add the following configurations for both PAM and LDAP realms:
```
role=authentication
authentication.name=ShiroProvider
authentication.param.sessionTimeout=30
authentication.param.redirectToUrl=/${GATEWAY_PATH}/knoxsso/knoxauth/login.html
authentication.param.restrictedCookies=rememberme,WWW-Authenticate

authentication.param.main.pamRealm=org.apache.knox.gateway.shirorealm.KnoxPamRealm
authentication.param.main.pamRealm.service=login

authentication.param.urls./**=authcBasic

authentication.param.main.ldapRealm=org.apache.knox.gateway.shirorealm.KnoxLdapRealm
authentication.param.main.ldapContextFactory=org.apache.knox.gateway.shirorealm.KnoxLdapContextFactory
authentication.param.main.ldapRealm.contextFactory=$ldapContextFactory
authentication.param.main.securityManager.realms=$pamRealm,$ldapRealm
authentication.param.main.ldapRealm.contextFactory.authenticationMechanism=simple
authentication.param.main.ldapRealm.contextFactory.url=ldap://#.#.#.#:389
authentication.param.main.ldapRealm.contextFactory.systemUsername=testuser@CLOUDERA.COM
authentication.param.main.ldapRealm.contextFactory.systemPassword=xxxxxxx
authentication.param.main.ldapRealm.userDnTemplate=CN={0},ou=****,ou=****,ou=****,dc=****,dc=****
```

### 5. Save the Configuration
Once you have added the configurations, save the changes.

### 6. Restart Knox Service
Restart the Knox service to apply the new configuration.

### 7. Verify Login with Both PAM and LDAP Users
After restarting, test the authentication by attempting to log in with both a PAM user (e.g., "ABC") and an LDAP user (e.g., "DEF"). Knox will try both PAM and LDAP authentication mechanisms, allowing access based on which one is successful.

### 8. Check the Logs for Authentication Success
Observe the log entries to confirm successful authentication for both users (PAM user "ABC" and LDAP user "DEF"). Sample logs:
```
2023-04-28 07:46:37,121 INFO knox.gateway (KnoxLdapRealm.java:getUserDn(688)) - Computed userDn: CN=****,ou=****,ou=****,ou=****,dc=****,dc=**** using dnTemplate for principal: ABC
2023-04-28 07:46:37,150 INFO knox.gateway (KnoxLdapRealm.java:doGetAuthenticationInfo(203)) - Could not login: org.apache.shiro.authc.UsernamePasswordToken - ABC, rememberMe=false (#.#.#.#)
2023-04-28 07:46:37,151 ERROR knox.gateway (KnoxLdapRealm.java:doGetAuthenticationInfo(205)) - Shiro unable to login: javax.naming.AuthenticationException: [LDAP: error code 49 - 80090308: LdapErr: DSID-0C0903C8, comment: AcceptSecurityContext error, data 52e, v2580]
2023-04-28 07:46:37,174 INFO knox.gateway (KnoxPamRealm.java:doGetAuthorizationInfo(129)) - Computed roles/groups: [****] for principal: ABC
2023-04-28 07:46:37,255 INFO knox.gateway (CookieUtils.java:getCookiesForName(46)) - Unable to find cookie with name: original-url
2023-04-28 07:46:37,270 INFO service.knoxsso (WebSSOResource.java:getAuthenticationToken(274))
2023-04-28 07:47:08,783 INFO knox.gateway (CookieUtils.java:getCookiesForName(46)) - Unable to find cookie with name: ****
2023-04-28 07:47:26,579 INFO knox.gateway (KnoxPamRealm.java:handleAuthFailure(167)) - Could not login: org.apache.shiro.authc.UsernamePasswordToken - DEF, rememberMe=false (#.#.#.#)
2023-04-28 07:47:26,579 ERROR knox.gateway (KnoxPamRealm.java:handleAuthFailure(170)) - Shiro unable to login: null
2023-04-28 07:47:26,580 INFO knox.gateway (KnoxLdapRealm.java:getUserDn(688)) - Computed userDn: CN=****,ou=****,ou=****,ou=****,dc=****,dc=**** using dnTemplate for principal: DEF
```

## Conclusion
By following these steps, you can successfully enable both PAM and LDAP authentication for Knox. This allows users to authenticate using either method, providing greater flexibility while maintaining security.

